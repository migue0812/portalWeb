<?php

use FStudio\model\base\usuarioBaseTable;

class dato_UsuarioTable extends usuarioBaseTable {

  public function getAll() {
    $conn = $this->getConnection($this->config);
    $sql = 'SELECT  dus_id  AS  ID, Usu_id   AS USUARIO_ID , '
    ' dus_nombre  AS  NOMBRE , dus_apellidos  AS APELLIDOS  ,'
    ' dus_correo  AS  CORREO  , dus_genero  AS GENERO,'
    ' dus_fecha_nacimiento     AS  FECHA_NACIMIENTO, dus_facebook   AS  FACEBOOK,'
    ' dus_twitter  AS  TWITTER, dus_google_plus  AS  GOOGLE_PLUS ,'
    ' dus_google_plus  AS  AVATAR , dus_created_at  AS CREATED_AT,'
    ' dus_updated_at AS UPDATED_AT, dus_deleted_at  AS DELETED_AT ,bdp_dato_usuario AS  _TABLE  ;  
';
    $answer = $conn->prepare($sql);
    $answer->execute();
    return ($answer->rowCount() > 0) ? $answer->fetchAll(PDO::FETCH_OBJ) : false;
  }
  
  public function getById($id) {
    $conn = $this->getConnection($this->config);
    $sql = 'SELECT  dus_id  AS  ID, Usu_id   AS USUARIO_ID , '
    ' dus_nombre  AS  NOMBRE , dus_apellidos  AS APELLIDOS  ,'
    ' dus_correo  AS  CORREO  , dus_genero  AS GENERO,'
    ' dus_fecha_nacimiento     AS  FECHA_NACIMIENTO, dus_facebook   AS  FACEBOOK,'
    ' dus_twitter  AS  TWITTER, dus_google_plus  AS  GOOGLE_PLUS ,'
    ' dus_google_plus  AS  AVATAR , dus_created_at  AS CREATED_AT,'
    ' dus_updated_at AS UPDATED_AT, dus_deleted_at  AS DELETED_AT ,bdp_dato_usuario AS  _TABLE  '
            . 'FROM bdp_dato_usuario '
            . 'WHERE dus_deleted_at'
            . 'AND dus_id = :id';
    $params = array(
         // ':id' => ($id !== null) ? $id : $this ->getId()
        ':id' => $id0
           
    );
    $answer = $conn->prepare($sql);
    $answer->execute($params);
   $this->setId($conn->lastinsertId());
    return TRUE;
  }
  
  public function save() {
    $conn = $this->getConnection($this->config);
    $sql = 'INSERT INTO dato_Usuario '
            .' dus_id  , Usu_id  ,   dus_nombre ' 
             .' dus_apellidos  , dus_correo ,'
            . ' dus_genero ' ,' dus_fecha_nacimiento '
            .' dus_facebook ' ,' dus_twitter ' 
            ' dus_google_plus ' ,' dus_google_plus ' '
                . '  ' dus_created_at ,dus_updated_at '
            .'dus_deleted_at ','bdp_dato_usuario'
    $params = array(
        ':Usu_id' => $this->getUsuarioId(),
        ':dus_nombre' => $this->getNombre(),
        ':dus_apellidos' => $this->getApellidos(),
        ':dus_fecha_nacimiento' => $this->getfecha_nacimiento(),
        ':dus_facebook' => $this->getfacebook(),
        ':dus_twitter' => $this->gettwitter(),
        ':dus_google_plus' => $this->getgoogle_plus(),
        ':dus_google_plus' => $this->getgoogle_plus(),
        ':dus_created_at' => $this->getcreated_at(),
        ':dus_updated_at' => $this->getupdated_at(),
        ':dus_deleted_at' => $this->getdeleted_at(),
        ':bdp_dato_usuario' => $this->getdato_usuario()

       
    );
    $answer = $conn->prepare($sql);
    $answer->execute($params);
    return $conn->lastInsertId(self::_SEQUENCE);
  }
  
  public function update() {
    $conn = $this->getConnection($this->config);
    $sql = 'UPDATE bdp_dato_usuario SET '
'dus_id =dus_id
Usu_id =Usu_id
dus_nombre =dus_nombre
dus_apellidos =dus_apellidos
dus_correo  =dus_correo
dus_genero =dus_genero
dus_fecha_nacimiento =dus_fecha_nacimiento
dus_facebook =dus_facebook
dus_twitter =dus_twitter
dus_google_plus =dus_google_plus
dus_google_plus =dus_google_plus
dus_created_at =dus_created_at
dus_updated_at =dus_updated_at
dus_deleted_at =dus_deleted_at
bdp_dato_usuario =bdp_dato_usuario'

    $params = array(
        ':Usu_id' => $this->getUsuarioId(),
        ':dus_nombre' => $this->getNombre(),
        ':dus_apellidos' => $this->getApellidos(),
        ':dus_fecha_nacimiento' => $this->getfecha_nacimiento(),
        ':dus_facebook' => $this->getfacebook(),
        ':dus_twitter' => $this->gettwitter(),
        ':dus_google_plus' => $this->getgoogle_plus(),
        ':dus_google_plus' => $this->getgoogle_plus(),
        ':dus_created_at' => $this->getcreated_at(),
        ':dus_updated_at' => $this->getupdated_at(),
        ':dus_deleted_at' => $this->getdeleted_at(),
        ':bdp_dato_usuario' => $this->getdato_usuario()
        
    );
    $answer = $conn->prepare($sql);
    $answer->execute($params);
    return true;
  }
 
  
  public function delete($deleteLogical = true) {
    $conn = $this->getConnection($this->config);
    $params = array(
        ':id' => $this->getId()
    );
    switch ($deleteLogical) {
      case true:
        $sql = 'UPDATE bdp_dato_usuario SET dus_deleted_at = now() WHERE Usu_id = :id';
        break;
      case false:
        $sql = 'DELETE FROM bdp_dato_usuario WHERE Usu_id = :id';
        break;
      default:
        throw new PDOException('Por favor indique un dato coherente para el borrado lógico (true) o físico (false)');
    }
    $answer = $conn->prepare($sql);
    $answer->execute($params);
    return true;
  }

}